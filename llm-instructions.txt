

## Here are best practices for html representation of a recipe 

Schema.org
Docs Schemas Validate About

Recipe
A Schema.org Type
Thing > CreativeWork > HowTo > Recipe
[more...]
Canonical URL: https://schema.org/Recipe
Check for open issues.
A recipe. For dietary restrictions covered by the recipe, a few common restrictions are enumerated via suitableForDiet. The keywords property can also be used to add more detail.
Property	Expected Type	Description
Properties from Recipe
cookTime	Duration	The time it takes to actually cook the dish, in ISO 8601 duration format.
cookingMethod	Text	The method of cooking, such as Frying, Steaming, ...
nutrition	NutritionInformation	Nutrition information about the recipe or menu item.
recipeCategory	Text	The category of the recipe—for example, appetizer, entree, etc.
recipeCuisine	Text	The cuisine of the recipe (for example, French or Ethiopian).
recipeIngredient	Text	A single ingredient used in the recipe, e.g. sugar, flour or garlic. Supersedes ingredients.
recipeInstructions	CreativeWork  or
ItemList  or
Text	A step in making the recipe, in the form of a single item (document, video, etc.) or an ordered list with HowToStep and/or HowToSection items.
recipeYield	QuantitativeValue  or
Text	The quantity produced by the recipe (for example, number of people served, number of servings, etc).
suitableForDiet	RestrictedDiet	Indicates a dietary restriction or guideline for which this recipe or menu item is suitable, e.g. diabetic, halal etc.
Properties from HowTo
estimatedCost	MonetaryAmount  or
Text	The estimated cost of the supply or supplies consumed when performing instructions.
performTime	Duration	The length of time it takes to perform instructions or a direction (not including time to prepare the supplies), in ISO 8601 duration format.
prepTime	Duration	The length of time it takes to prepare the items to be used in instructions or a direction, in ISO 8601 duration format.
step	CreativeWork  or
HowToSection  or
HowToStep  or
Text	A single step item (as HowToStep, text, document, video, etc.) or a HowToSection. Supersedes steps.
supply	HowToSupply  or
Text	A sub-property of instrument. A supply consumed when performing instructions or a direction.
tool	HowToTool  or
Text	A sub property of instrument. An object used (but not consumed) when performing instructions or a direction.
totalTime	Duration	The total time required to perform instructions or a direction (including time to prepare the supplies), in ISO 8601 duration format.
yield	QuantitativeValue  or
Text	The quantity that results by performing instructions. For example, a paper airplane, 10 personalized candles.
Properties from CreativeWork
about	Thing	The subject matter of the content.
Inverse property: subjectOf
abstract	Text	An abstract is a short description that summarizes a CreativeWork.
accessMode	Text	The human sensory perceptual system or cognitive faculty through which a person may process or perceive information. Values should be drawn from the approved vocabulary.
accessModeSufficient	ItemList	A list of single or combined accessModes that are sufficient to understand all the intellectual content of a resource. Values should be drawn from the approved vocabulary.
accessibilityAPI	Text	Indicates that the resource is compatible with the referenced accessibility API. Values should be drawn from the approved vocabulary.
accessibilityControl	Text	Identifies input methods that are sufficient to fully control the described resource. Values should be drawn from the approved vocabulary.
accessibilityFeature	Text	Content features of the resource, such as accessible media, alternatives and supported enhancements for accessibility. Values should be drawn from the approved vocabulary.
accessibilityHazard	Text	A characteristic of the described resource that is physiologically dangerous to some users. Related to WCAG 2.0 guideline 2.3. Values should be drawn from the approved vocabulary.
accessibilitySummary	Text	A human-readable summary of specific accessibility features or deficiencies, consistent with the other accessibility metadata but expressing subtleties such as "short descriptions are present but long descriptions will be needed for non-visual users" or "short descriptions are present and no long descriptions are needed".
accountablePerson	Person	Specifies the Person that is legally accountable for the CreativeWork.
acquireLicensePage	CreativeWork  or
URL	Indicates a page documenting how licenses can be purchased or otherwise acquired, for the current item.
aggregateRating	AggregateRating	The overall rating, based on a collection of reviews or ratings, of the item.
alternativeHeadline	Text	A secondary title of the CreativeWork.
archivedAt	URL  or
WebPage	Indicates a page or other link involved in archival of a CreativeWork. In the case of MediaReview, the items in a MediaReviewItem may often become inaccessible, but be archived by archival, journalistic, activist, or law enforcement organizations. In such cases, the referenced page may not directly publish the content.
assesses	DefinedTerm  or
Text	The item being described is intended to assess the competency or learning outcome defined by the referenced term.
associatedMedia	MediaObject	A media object that encodes this CreativeWork. This property is a synonym for encoding.
audience	Audience	An intended audience, i.e. a group for whom something was created. Supersedes serviceAudience.
audio	AudioObject  or
Clip  or
MusicRecording	An embedded audio object.
author	Organization  or
Person	The author of this content or rating. Please note that author is special in that HTML 5 provides a special mechanism for indicating authorship via the rel tag. That is equivalent to this and may be used interchangeably.
award	Text	An award won by or for this item. Supersedes awards.
character	Person	Fictional person connected with a creative work.
citation	CreativeWork  or
Text	A citation or reference to another creative work, such as another publication, web page, scholarly article, etc.
comment	Comment	Comments, typically from users.
commentCount	Integer	The number of comments this CreativeWork (e.g. Article, Question or Answer) has received. This is most applicable to works published in Web sites with commenting system; additional comments may exist elsewhere.
conditionsOfAccess	Text	Conditions that affect the availability of, or method(s) of access to, an item. Typically used for real world items such as an ArchiveComponent held by an ArchiveOrganization. This property is not suitable for use as a general Web access control mechanism. It is expressed only in natural language.

For example "Available by appointment from the Reading Room" or "Accessible only from logged-in accounts ".
contentLocation	Place	The location depicted or described in the content. For example, the location in a photograph or painting.
contentRating	Rating  or
Text	Official rating of a piece of content—for example, 'MPAA PG-13'.
contentReferenceTime	DateTime	The specific time described by a creative work, for works (e.g. articles, video objects etc.) that emphasise a particular moment within an Event.
contributor	Organization  or
Person	A secondary contributor to the CreativeWork or Event.
copyrightHolder	Organization  or
Person	The party holding the legal copyright to the CreativeWork.
copyrightNotice	Text	Text of a notice appropriate for describing the copyright aspects of this Creative Work, ideally indicating the owner of the copyright for the Work.
copyrightYear	Number	The year during which the claimed copyright for the CreativeWork was first asserted.
correction	CorrectionComment  or
Text  or
URL	Indicates a correction to a CreativeWork, either via a CorrectionComment, textually or in another document.
countryOfOrigin	Country	The country of origin of something, including products as well as creative works such as movie and TV content.

In the case of TV and movie, this would be the country of the principle offices of the production company or individual responsible for the movie. For other kinds of CreativeWork it is difficult to provide fully general guidance, and properties such as contentLocation and locationCreated may be more applicable.

In the case of products, the country of origin of the product. The exact interpretation of this may vary by context and product type, and cannot be fully enumerated here.
creativeWorkStatus	DefinedTerm  or
Text	The status of a creative work in terms of its stage in a lifecycle. Example terms include Incomplete, Draft, Published, Obsolete. Some organizations define a set of terms for the stages of their publication lifecycle.
creator	Organization  or
Person	The creator/author of this CreativeWork. This is the same as the Author property for CreativeWork.
creditText	Text	Text that can be used to credit person(s) and/or organization(s) associated with a published Creative Work.
dateCreated	Date  or
DateTime	The date on which the CreativeWork was created or the item was added to a DataFeed.
dateModified	Date  or
DateTime	The date on which the CreativeWork was most recently modified or when the item's entry was modified within a DataFeed.
datePublished	Date  or
DateTime	Date of first publication or broadcast. For example the date a CreativeWork was broadcast or a Certification was issued.
digitalSourceType	IPTCDigitalSourceEnumeration	Indicates an IPTCDigitalSourceEnumeration code indicating the nature of the digital source(s) for some CreativeWork.
discussionUrl	URL	A link to the page containing the comments of the CreativeWork.
editEIDR	Text  or
URL	An EIDR (Entertainment Identifier Registry) identifier representing a specific edit / edition for a work of film or television.

For example, the motion picture known as "Ghostbusters" whose titleEIDR is "10.5240/7EC7-228A-510A-053E-CBB8-J" has several edits, e.g. "10.5240/1F2A-E1C5-680A-14C6-E76B-I" and "10.5240/8A35-3BEE-6497-5D12-9E4F-3".

Since schema.org types like Movie and TVEpisode can be used for both works and their multiple expressions, it is possible to use titleEIDR alone (for a general description), or alongside editEIDR for a more edit-specific description.
editor	Person	Specifies the Person who edited the CreativeWork.
educationalAlignment	AlignmentObject	An alignment to an established educational framework.

This property should not be used where the nature of the alignment can be described using a simple property, for example to express that a resource teaches or assesses a competency.
educationalLevel	DefinedTerm  or
Text  or
URL	The level in terms of progression through an educational or training context. Examples of educational levels include 'beginner', 'intermediate' or 'advanced', and formal sets of level indicators.
educationalUse	DefinedTerm  or
Text	The purpose of a work in the context of education; for example, 'assignment', 'group work'.
encoding	MediaObject	A media object that encodes this CreativeWork. This property is a synonym for associatedMedia. Supersedes encodings.
Inverse property: encodesCreativeWork
encodingFormat	Text  or
URL	Media type typically expressed using a MIME format (see IANA site and MDN reference), e.g. application/zip for a SoftwareApplication binary, audio/mpeg for .mp3 etc.

In cases where a CreativeWork has several media type representations, encoding can be used to indicate each MediaObject alongside particular encodingFormat information.

Unregistered or niche encoding and file formats can be indicated instead via the most appropriate URL, e.g. defining Web page or a Wikipedia/Wikidata entry. Supersedes fileFormat.
exampleOfWork	CreativeWork	A creative work that this work is an example/instance/realization/derivation of.
Inverse property: workExample
expires	Date  or
DateTime	Date the content expires and is no longer useful or available. For example a VideoObject or NewsArticle whose availability or relevance is time-limited, a ClaimReview fact check whose publisher wants to indicate that it may no longer be relevant (or helpful to highlight) after some date, or a Certification the validity has expired.
funder	Organization  or
Person	A person or organization that supports (sponsors) something through some kind of financial contribution.
funding	Grant	A Grant that directly or indirectly provide funding or sponsorship for this item. See also ownershipFundingInfo.
Inverse property: fundedItem
genre	Text  or
URL	Genre of the creative work, broadcast channel or group.
hasPart	CreativeWork	Indicates an item or CreativeWork that is part of this item, or CreativeWork (in some sense).
Inverse property: isPartOf
headline	Text	Headline of the article.
inLanguage	Language  or
Text	The language of the content or performance or used in an action. Please use one of the language codes from the IETF BCP 47 standard. See also availableLanguage. Supersedes language.
interactionStatistic	InteractionCounter	The number of interactions for the CreativeWork using the WebSite or SoftwareApplication. The most specific child type of InteractionCounter should be used. Supersedes interactionCount.
interactivityType	Text	The predominant mode of learning supported by the learning resource. Acceptable values are 'active', 'expositive', or 'mixed'.
interpretedAsClaim	Claim	Used to indicate a specific claim contained, implied, translated or refined from the content of a MediaObject or other CreativeWork. The interpreting party can be indicated using claimInterpreter.
isAccessibleForFree	Boolean	A flag to signal that the item, event, or place is accessible for free. Supersedes free.
isBasedOn	CreativeWork  or
Product  or
URL	A resource from which this work is derived or from which it is a modification or adaptation. Supersedes isBasedOnUrl.
isFamilyFriendly	Boolean	Indicates whether this content is family friendly.
isPartOf	CreativeWork  or
URL	Indicates an item or CreativeWork that this item, or CreativeWork (in some sense), is part of.
Inverse property: hasPart
keywords	DefinedTerm  or
Text  or
URL	Keywords or tags used to describe some item. Multiple textual entries in a keywords list are typically delimited by commas, or by repeating the property.
learningResourceType	DefinedTerm  or
Text	The predominant type or kind characterizing the learning resource. For example, 'presentation', 'handout'.
license	CreativeWork  or
URL	A license document that applies to this content, typically indicated by URL.
locationCreated	Place	The location where the CreativeWork was created, which may not be the same as the location depicted in the CreativeWork.
mainEntity	Thing	Indicates the primary entity described in some page or other CreativeWork.
Inverse property: mainEntityOfPage
maintainer	Organization  or
Person	A maintainer of a Dataset, software package (SoftwareApplication), or other Project. A maintainer is a Person or Organization that manages contributions to, and/or publication of, some (typically complex) artifact. It is common for distributions of software and data to be based on "upstream" sources. When maintainer is applied to a specific version of something e.g. a particular version or packaging of a Dataset, it is always possible that the upstream source has a different maintainer. The isBasedOn property can be used to indicate such relationships between datasets to make the different maintenance roles clear. Similarly in the case of software, a package may have dedicated maintainers working on integration into software distributions such as Ubuntu, as well as upstream maintainers of the underlying work.
material	Product  or
Text  or
URL	A material that something is made from, e.g. leather, wool, cotton, paper.
materialExtent	QuantitativeValue  or
Text	The quantity of the materials being described or an expression of the physical space they occupy.
mentions	Thing	Indicates that the CreativeWork contains a reference to, but is not necessarily about a concept.
offers	Demand  or
Offer	An offer to provide this item—for example, an offer to sell a product, rent the DVD of a movie, perform a service, or give away tickets to an event. Use businessFunction to indicate the kind of transaction offered, i.e. sell, lease, etc. This property can also be used to describe a Demand. While this property is listed as expected on a number of common types, it can be used in others. In that case, using a second type, such as Product or a subtype of Product, can clarify the nature of the offer.
Inverse property: itemOffered
pattern	DefinedTerm  or
Text	A pattern that something has, for example 'polka dot', 'striped', 'Canadian flag'. Values are typically expressed as text, although links to controlled value schemes are also supported.
position	Integer  or
Text	The position of an item in a series or sequence of items.
producer	Organization  or
Person	The person or organization who produced the work (e.g. music album, movie, TV/radio series etc.).
provider	Organization  or
Person	The service provider, service operator, or service performer; the goods producer. Another party (a seller) may offer those services or goods on behalf of the provider. A provider may also serve as the seller. Supersedes carrier.
publication	PublicationEvent	A publication event associated with the item.
publisher	Organization  or
Person	The publisher of the article in question.
publisherImprint	Organization	The publishing division which published the comic.
publishingPrinciples	CreativeWork  or
URL	The publishingPrinciples property indicates (typically via URL) a document describing the editorial principles of an Organization (or individual, e.g. a Person writing a blog) that relate to their activities as a publisher, e.g. ethics or diversity policies. When applied to a CreativeWork (e.g. NewsArticle) the principles are those of the party primarily responsible for the creation of the CreativeWork.

While such policies are most typically expressed in natural language, sometimes related information (e.g. indicating a funder) can be expressed using schema.org terminology.
recordedAt	Event	The Event where the CreativeWork was recorded. The CreativeWork may capture all or part of the event.
Inverse property: recordedIn
releasedEvent	PublicationEvent	The place and time the release was issued, expressed as a PublicationEvent.
review	Review	A review of the item. Supersedes reviews.
schemaVersion	Text  or
URL	Indicates (by URL or string) a particular version of a schema used in some CreativeWork. This property was created primarily to indicate the use of a specific schema.org release, e.g. 10.0 as a simple string, or more explicitly via URL, https://schema.org/docs/releases.html#v10.0. There may be situations in which other schemas might usefully be referenced this way, e.g. http://dublincore.org/specifications/dublin-core/dces/1999-07-02/ but this has not been carefully explored in the community.
sdDatePublished	Date	Indicates the date on which the current structured data was generated / published. Typically used alongside sdPublisher.
sdLicense	CreativeWork  or
URL	A license document that applies to this structured data, typically indicated by URL.
sdPublisher	Organization  or
Person	Indicates the party responsible for generating and publishing the current structured data markup, typically in cases where the structured data is derived automatically from existing published content but published on a different site. For example, student projects and open data initiatives often re-publish existing content with more explicitly structured metadata. The sdPublisher property helps make such practices more explicit.
size	DefinedTerm  or
QuantitativeValue  or
SizeSpecification  or
Text	A standardized size of a product or creative work, specified either through a simple textual string (for example 'XL', '32Wx34L'), a QuantitativeValue with a unitCode, or a comprehensive and structured SizeSpecification; in other cases, the width, height, depth and weight properties may be more applicable.
sourceOrganization	Organization	The Organization on whose behalf the creator was working.
spatial	Place	The "spatial" property can be used in cases when more specific properties (e.g. locationCreated, spatialCoverage, contentLocation) are not known to be appropriate.
spatialCoverage	Place	The spatialCoverage of a CreativeWork indicates the place(s) which are the focus of the content. It is a subproperty of contentLocation intended primarily for more technical and detailed materials. For example with a Dataset, it indicates areas that the dataset describes: a dataset of New York weather would have spatialCoverage which was the place: the state of New York.
sponsor	Organization  or
Person	A person or organization that supports a thing through a pledge, promise, or financial contribution. E.g. a sponsor of a Medical Study or a corporate sponsor of an event.
teaches	DefinedTerm  or
Text	The item being described is intended to help a person learn the competency or learning outcome defined by the referenced term.
temporal	DateTime  or
Text	The "temporal" property can be used in cases where more specific properties (e.g. temporalCoverage, dateCreated, dateModified, datePublished) are not known to be appropriate.
temporalCoverage	DateTime  or
Text  or
URL	The temporalCoverage of a CreativeWork indicates the period that the content applies to, i.e. that it describes, either as a DateTime or as a textual string indicating a time period in ISO 8601 time interval format. In the case of a Dataset it will typically indicate the relevant time period in a precise notation (e.g. for a 2011 census dataset, the year 2011 would be written "2011/2012"). Other forms of content, e.g. ScholarlyArticle, Book, TVSeries or TVEpisode, may indicate their temporalCoverage in broader terms - textually or via well-known URL. Written works such as books may sometimes have precise temporal coverage too, e.g. a work set in 1939 - 1945 can be indicated in ISO 8601 interval format format via "1939/1945".

Open-ended date ranges can be written with ".." in place of the end date. For example, "2015-11/.." indicates a range beginning in November 2015 and with no specified final date. This is tentative and might be updated in future when ISO 8601 is officially updated. Supersedes datasetTimeInterval.
text	Text	The textual content of this CreativeWork.
thumbnail	ImageObject	Thumbnail image for an image or video.
thumbnailUrl	URL	A thumbnail image relevant to the Thing.
timeRequired	Duration	Approximate or typical time it usually takes to work with or through the content of this work for the typical or target audience.
translationOfWork	CreativeWork	The work that this work has been translated from. E.g. 物种起源 is a translationOf “On the Origin of Species”.
Inverse property: workTranslation
translator	Organization  or
Person	Organization or person who adapts a creative work to different languages, regional differences and technical requirements of a target market, or that translates during some event.
typicalAgeRange	Text	The typical expected age range, e.g. '7-9', '11-'.
usageInfo	CreativeWork  or
URL	The schema.org usageInfo property indicates further information about a CreativeWork. This property is applicable both to works that are freely available and to those that require payment or other transactions. It can reference additional information, e.g. community expectations on preferred linking and citation conventions, as well as purchasing details. For something that can be commercially licensed, usageInfo can provide detailed, resource-specific information about licensing options.

This property can be used alongside the license property which indicates license(s) applicable to some piece of content. The usageInfo property can provide information about other licensing options, e.g. acquiring commercial usage rights for an image that is also available under non-commercial creative commons licenses.
version	Number  or
Text	The version of the CreativeWork embodied by a specified resource.
video	Clip  or
VideoObject	An embedded video object.
wordCount	Integer	The number of words in the text of the CreativeWork such as an Article, Book, etc.
workExample	CreativeWork	Example/instance/realization/derivation of the concept of this creative work. E.g. the paperback edition, first edition, or e-book.
Inverse property: exampleOfWork
workTranslation	CreativeWork	A work that is a translation of the content of this work. E.g. 西遊記 has an English workTranslation “Journey to the West”, a German workTranslation “Monkeys Pilgerfahrt” and a Vietnamese translation Tây du ký bình khảo.
Inverse property: translationOfWork
Properties from Thing
additionalType	Text  or
URL	An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. Typically the value is a URI-identified RDF class, and in this case corresponds to the use of rdf:type in RDF. Text values can be used sparingly, for cases where useful information can be added without their being an appropriate schema to reference. In the case of text values, the class label should follow the schema.org style guide.
alternateName	Text	An alias for the item.
description	Text  or
TextObject	A description of the item.
disambiguatingDescription	Text	A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation.
identifier	PropertyValue  or
Text  or
URL	The identifier property represents any kind of identifier for any kind of Thing, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See background notes for more details.
image	ImageObject  or
URL	An image of the item. This can be a URL or a fully described ImageObject.
mainEntityOfPage	CreativeWork  or
URL	Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See background notes for details.
Inverse property: mainEntity
name	Text	The name of the item.
potentialAction	Action	Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.
sameAs	URL	URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website.
subjectOf	CreativeWork  or
Event	A CreativeWork or Event about this Thing.
Inverse property: about
url	URL	URL of the item.

Instances of Recipe may appear as a value for the following properties
Property	On Types	Description
recipe	CookAction	A sub property of instrument. The recipe/instructions used to perform the action.
Examples
Copy to clipboard Example 1 
No Markup Microdata RDFa JSON-LD Structure
Example notes or example HTML without markup.
Mom's World Famous Banana Bread
By John Smith, May 8, 2009
<img src="bananabread.jpg" alt="Banana bread on a plate" />

This classic banana bread recipe comes from my mom -- the walnuts add a nice
 texture and flavor to the banana bread.

Prep Time: 15 minutes
Cook time: 1 hour
Yield: 1 loaf
Tags: Low fat

Nutrition facts:
240 calories, 9 grams fat

Ingredients:
- 3 or 4 ripe bananas, smashed
- 1 egg
- 3/4 cup of sugar
...

Instructions:
 Preheat the oven to 350 degrees. Mix in the ingredients in a bowl. Add the
 flour last. Pour the mixture into a loaf pan and bake for one hour.

140 comments:
From Janel, May 5 -- thank you, great recipe!
...
Terms and conditions

• Schema.org • V29.2 | 2025-05-15



## Here is how samsung food represents a recipe:

---
description: >-
  The Recipe API service lets you read and write any internal and external
  recipes and your Whisk recipe collections.
---

# Recipe

Let's first understand the Recipe object and its data structure before looking at its endpoints' description.

## Recipe Object

A Recipe object is a collection of arrays and attributes that defines the data structure for any given recipe.

This is how the data structure of a recipe looks in JSON format:

```graphql
{
  "recipe": {
    "id": "107d918699fb79c4ed4a561823f9f77d64e",
    "name": "Blueberry Bakewell muffins",
    "description": "These easy blueberry muffins have a delightfully jammy centre and crunchy crumble topping - a tasty treat for teatime or packed lunch",
    "ingredients": [
      ...
    ],
    "instructions": {
      ...
    },
    "images": [
      ...
    ],
    "videos": [
      ...
    ],
    "source": {
      ...
    },
    "servings": 12,
    "servings_scaled": 2,
    "durations": {
      ...
    },
    "normalized_ingredients": [
      ...
    ],
    "nutrition": {
      ...
    },
    "labels": {
      ...
    },
    "constraints": {
      ...
    },
    "saved": {
      ...
    },
    "author": {
      ...
    },
    "language": "en",
    "custom_labels": [
      ...
    ],
    "main_ingredients": [
      ....
    ]
  }
}
```

### Core Attributes

The following attributes define the core of a recipe:

| **Attribute**     | **Type** | **Description**                                                                                                                                         |
| ----------------- | -------- | ------------------------------------------------------------------------------------------------------------------------------------------------------- |
| `id`              | string   | The recipe identifier.                                                                                                                                  |
| `name`            | string   | The full name of the recipe.                                                                                                                            |
| `description`     | string   | A summary describing the recipe.                                                                                                                        |
| `servings`        | integer  | The number of people that can be served the original recipe.                                                                                            |
| `servings_scaled` | integer  | The number of servings based on the requirement you specified while pulling the recipe details.                                                         |
| `language`        | string   | As per [ISO 639](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) standards, a two-letter code indicating the language used in recipe definition. |

In addition to the base attributes, there are objects and arrays that contain more information on the recipe.&#x20;

#### Ingredients&#xD;

This array contains information on the ingredients used in the recipe.

```graphql
"ingredients":[
   {
      "text":"1/4 cup cholesterol-free egg product"
   },
   ...
   {
      "text":"HEINZ Tomato Ketchup",
      "linked_product":{
         "id":"5f75d73bcfed282362a8b3aa",
         "name":"HEINZ Tomato Ketchup",
         "images":[
            ...
         ]
      }
   }
],
```

| **Attribute**    | **Type** | **Description**                                                                                                      |
| ---------------- | -------- | -------------------------------------------------------------------------------------------------------------------- |
| `text`           | string   | A specific ingredient used in the recipe — sugar 2-tbsp, flour 10g, or garlic 3-cloves.                              |
| `group`          | string   | The group name if the ingredient falls under a particular group of ingredients.                                      |
| `linked_product` | object   | This object contains details of a branded product that is stored in Whisk Studio and is being used as an ingredient. |

The `linked_product` object contains the following attributes:\


| Attribute             | Type   | Description                                                                                                   |
| --------------------- | ------ | ------------------------------------------------------------------------------------------------------------- |
| `id`                  | string | The product identifier.                                                                                       |
| `name`                | string | The product’s full name.                                                                                      |
| `images`              | array  | One or more images of the product. This array contains the hosted URL and size details of each product image. |
| `external_product_id` | string | An identifier assigned by the product's author.                                                               |

#### Images

This array contains information on one or more images of the completed dish included in the recipe.

```graphql
"images":[
   {
      "url":"https://whisk-res.cloudinary.com/image/upload/v1603979937/recipe/a322bb09c8934e66d3eca3f98c59004a.jpg",
      "responsive":{
         "url":"https://whisk-res.cloudinary.com/image/upload/v1603979937/recipe/a322bb09c8934e66d3eca3f98c59004a.jpg",
         "width":240,
         "height":208
      }
   },
   ...
],
```

| Attribute    | Type   | Description                                                                                                                                         |
| ------------ | ------ | --------------------------------------------------------------------------------------------------------------------------------------------------- |
| `url`        | string | Hosted URL of an image.                                                                                                                             |
| `responsive` | object | A responsive image adjusts its size based on the screen size. This object contains attributes to access the image with flexible size based on need. |

The `responsive` object contains the following attributes:

| Attribute | Type   | Description             |
| --------- | ------ | ----------------------- |
| `url`     | string | Hosted URL of an image. |
| `width`   | number | Image width.            |
| `height`  | number | Image height.           |

#### Source

‌This object contains details of the recipe origins.

```graphql
"source":{
    "name":"myfoodandfamily.com",
    "display_name":"myfoodandfamily",
    "url":"https://www.myfoodandfamily.com/recipe/063765/grab-and-go-breakfast-sandwich?utm=skforu_rdp",
    "image":{
                "url":"https://whisk-res.cloudinary.com/image/upload/v1565965713/publishers/logos/myfoodandfamily-logo.png",
        "responsive":{
            "url":"https://whisk-res.cloudinary.com/image/upload/v1565965713/publishers/logos/myfoodandfamily-logo.png",
            "width":256,
            "height":256
        }
    }
},
```

| Attribute      | Type   | Description                                                             |
| -------------- | ------ | ----------------------------------------------------------------------- |
| `name`         | string | Indicates the name of the recipe’s origin.                              |
| `display_name` | string | Indicates the display name of the recipe's origin.                      |
| `url`          | string | The recipe’s origin URL.                                                |
| `image`        | object | This object includes information on the origins of the recipe's image.  |

#### Durations

‌This object contains information on the time it takes to prepare and cook the recipe.

```graphql
"durations":{
    "cook_time":20,
    "prep_time":10,
    "total_time":30
},
```

| Attribute    | Type   | Description                                                                            |
| ------------ | ------ | -------------------------------------------------------------------------------------- |
| `cook_time`  | number | The time (in minutes) it takes to cook the dish.                                       |
| `prep_time`  | number | The time (in minutes) it takes to prepare the items used in the recipe's instructions. |
| `total_time` | number | The total time (in minutes) it takes to prepare the dish.                              |

#### **‌**Labels

‌‌This object contains information on the labels attached to the recipe that helps distinguish its type, cuisine, category, and the techniques required to cook.

```graphql
"labels": {
    "meal_type": [
      {
        "name": "main-course",
        "display_name": "Main Course"
      },
      ...

      {
        "name": "dinner",
        "display_name": "Dinner"
      }
    ],
    "cuisine": [
      {
        "name": "french",
        "display_name": "French"
      }
    ],
    "category": [
      {
        "name": "dinner",
        "display_name": "Dinner"
      },
      {
        "name": "lunch",
        "display_name": "Lunch"
      }
    ],
    "technique": [
      {
        "name": "simmering",
        "display_name": "Simmering"
      },
      ...

      {
        "name": "pan-frying",
        "display_name": "Pan Frying"
      }
    ]
  },
```

Each label attached to the recipe appears as a child-array.

| Attribute   | Type  | Description                                                  |
| ----------- | ----- | ------------------------------------------------------------ |
| `meal_type` | array | Indicates the meal type that applies to the recipe.          |
| `cuisine`   | array | Indicates the recipe's cuisine.                              |
| `category`  | array | Indicates the recipe's category.                             |
| `technique` | array | Indicates the cooking technique required to cook the recipe. |

Each of these arrays contains the following attributes:

| Attribute      | Type   | Description                                   |
| -------------- | ------ | --------------------------------------------- |
| `name`         | string | ​The label name saved in the source.          |
| `display_name` | string | The label name that appears on the front-end. |

For information on supported labels, see [Recipe Labels](../../resources/recipe-labels#labels).

#### Author

‌This object includes information about the Whisk user who created the recipe.

```graphql
"author":{
    "id": "10297e19d97dd5a43ecbd9a13172ce65bfb"
    "name":"Sara Buenfeld"
    "image":{
      "url":"https://img.cjthemarket.com/images/file/author/973/20191226105710715.jpg",
      "responsive":{
         "url":"https://whisk-res.cloudinary.com/image/upload/v1602854082/author/8bade35e90ecf44eac6ec7ae5346d228.jpg",
         "width":300,
         "height":300
      }
},
```

| Attribute | Type   | Description                                                                                            |
| --------- | ------ | ------------------------------------------------------------------------------------------------------ |
| `id`      | string | The recipe creator's identifier.                                                                       |
| `name`    | string | The recipe creator's name.                                                                             |
| `image`   | object | The recipe creator's image. See the [images array](broken-reference) description for more information. |

#### Custom Labels

‌This array includes a list of user-defined labels linked to the recipe.

```graphql
"custom_labels":[
   {
      "name":"brand-category",
      "labels":[
         {
            "name":"cj-chinese"
         },
         {
            "name":"cj-etc"
         }
      ]
   },
   {
      "name":"brand",
      "labels":[
         {
            "name":"kraft-cheese"
         }
      ]
   },
   {
      "name":"barcode-number",
      "labels":[
         {
            "name":"00013000006409"
         }
      ]
   }
]
```

| Attribute | Type   | Description                        |
| --------- | ------ | ---------------------------------- |
| `name`    | string | Label group's name.                |
| `labels`  | array  | A list of labels inside the group. |

#### Tips&#xD;

‌This array includes a list of advice linked to the recipe.

```graphql
 "tips": [
    {
      "header": "string",
      "text": "string"
    }
 ]
```

| Type   | Type   | Description                 |
| ------ | ------ | --------------------------- |
| header | string | A heading for the advice.   |
| text   | string | Text describing the advice. |

#### Main ingredients

The most important products of a recipe. We consider them to be equal in case there are several products returned.

```json
 "main_ingredients": [
      "veal",
      "bacon",
      "fruit"
]
```

### Optional Data&#xD;

The recipe data structure may include extra information based on any additional parameters included in the API request.

#### Normalized Ingredients&#xD;

This array includes detailed analysis of each recipe's ingredient.

```graphql
"normalized_ingredients":[
   {
      "text":"1 slice cooked OSCAR MAYER Bacon, cut crosswise in half",
      "analysis":[
         {
            "alternative_measurements": [
                        {
                            "amount": {
                                "quantity": 120,
                                "unit": "g"
                            },
                            "measurement_system": "MEASUREMENT_SYSTEM_METRIC"
                        },
                        {
                            "amount": {
                                "quantity": 1,
                                "unit": "slice"
                            },
                            "measurement_system": "MEASUREMENT_SYSTEM_IMPERIAL"
                        }
                    ],
            "product":{
               "canonical_name":"OSCAR MAYER COOKED BACON (READY MADE)",
               "original_name":"cooked oscar mayer bacon"
            },
            "category":{
               "canonical_name":"MEATS AND SEAFOOD"
            },
            "brand":{
               "canonical_name":"OSCAR MAYER"
            },
            "quantity":1,
            "unit":"slice",
            "comment":"cut crosswise in half",
            "image_url":"https://whisk-res.cloudinary.com/image/upload/v1570185262/custom_upload/4e3434d390926ff30a3f96652529194d.jpg"
         }
      ],
      "source_text":"1 slice cooked OSCAR MAYER Bacon, cut crosswise in half"
   },
   {
      "text":"HEINZ Tomato Ketchup",
      "linked_product":{
         "id":"5f75d73bcfed282362a8b3aa",
         "name":"HEINZ Tomato Ketchup",
         "images":[
            {
               "url":"https://whisk-res.cloudinary.com/image/upload/v1600195675/inventory_item/20c81dcc9b003de383b1891828b59fc5.jpg"
            }
         ]
      },
      "source_text":"HEINZ Tomato Ketchup"
   },
   ...
],
```

| Attribute        | Type   | Description                                                                                                                                                                               |
| ---------------- | ------ | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |
| `text`           | string | A specific ingredient used in the recipe — sugar 2-tbsp, flour 10g, or garlic 3-cloves.                                                                                                   |
| `group`          | string | The group name if the ingredient falls under a particular group of ingredients.                                                                                                           |
| `linked_product` | object | This object contains details of a branded product that is stored in Whisk Studio and is being used as an ingredient. For more information, see the [ingredients array](broken-reference). |
| `analysis`       | array  | ​Detailed information on the ingredient that is not linked to any product stored in Whisk Studio.                                                                                         |
| `source_text`    | string | ​The ingredient name saved in the source.                                                                                                                                                 |

The `analysis` array includes the following attributes:

| Attribute                  | Type   | Description                                                                                                                                                                                                                                                                        |
| -------------------------- | ------ | ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |
| `product`                  | object | The canonical and original name of the product being used as an ingredient. It should not be confused with the `linked_product` object, since specific recipes may specify a branded product as an ingredient, which may not be one of their own branded products on Whisk Studio. |
| `alternative_measurements` | object | The alternative measurment unit for ingredient. Contains metric and imperial units and measurments                                                                                                                                                                                 |
| `category`                 | object | The canonical name of the category to which the ingredient belongs.                                                                                                                                                                                                                |
| `brand`                    | object | The ingredient product's brand canonical name.                                                                                                                                                                                                                                     |
| `quantity`                 | number | The ingredient volume or count.                                                                                                                                                                                                                                                    |
| `comment`                  | string | Any additional info attached with the ingredient.                                                                                                                                                                                                                                  |
| `unit`                     | string | The measurement unit of the ingredient's quantity.                                                                                                                                                                                                                                 |
| `multiplier`               | number | ​The factor for unit conversion.                                                                                                                                                                                                                                                   |
| `image_url`                | string | The source location of the ingredient's image.                                                                                                                                                                                                                                     |

#### ‌Instructions‌&#xD;

This object includes information on each step required in the recipe preparation.

```graphql
"instructions":{
   "steps":[
      {
         "text":"Cook egg product in skillet sprayed with cooking spray on medium heat 3 min. or until set, stirring occasionally.",
         "images":[
            {
               "url":"https://whisk-res.cloudinary.com/image/upload/v1603979936/recipe/33c0f4a5c00651929f57d00b398aafda.jpg",
               "width":424,
               "height":640
            }
         ]
      },
      {
         "text":"Fill muffin halves with egg product, Singles and bacon.",
         "images":[
            {
               "url":"https://whisk-res.cloudinary.com/image/upload/v1603979947/recipe/62848f0ee14fd5808e541e3e29934e72.jpg",
               "width":424,
               "height":640
            }
         ]
      }
   ]
},
```

| Attribute | Type  | Description                                                      |
| --------- | ----- | ---------------------------------------------------------------- |
| `steps`   | array | An array containing a list of steps required to cook the recipe. |

The steps array contains the following attributes:

| Attribute       | Type   | Description                                                                                                                  |
| --------------- | ------ | ---------------------------------------------------------------------------------------------------------------------------- |
| `text`          | string | A specific step in the list of instructions to cook the recipe — “Heat the oil in a large frying pan”.                       |
| `group`         | string | The group name if the step falls under a particular group of steps.                                                          |
| `images`        | array  | One or more images attached to the step. This array contains the hosted URL and size details of each image.                  |
| `custom_labels` | array  | One or more user-defined labels attached to the step. For more information, see the [custom labels](broken-reference) array. |

#### Nutrition&#xD;

‌This object contains information about the recipe's nutritional value.

```graphql
"nutrition":{
    "status":"STATUS_AVAILABLE",
    "total":[
        {
            "label":"Magnesium",
            "code":"NUTRITION_CODE_MG",
            "value":82.61800000000001,
            "unit":"NUTRITION_UNIT_MG"
        },
        ...
    ],
    "coverage": 0.93,
    "health_score":{
        "value":6.687124447756711,
        "nutrients_influence":[
            {
                "code":"NUTRITION_CODE_FAT_UNSAT",
                "influence":0.7762592808559045,
                "comment":"Strong positive impact"
            },
            ...
        ]
    },
    "glycemic_index":{
        "value":42.12
    },
    "glycemic_load":{
        "value":7.66
    }
},
```

| Attribute        | Type   | Description                                                                                          |
| ---------------- | ------ | ---------------------------------------------------------------------------------------------------- |
| `status`         | string | The recipe's nutritional information availability status.                                            |
| `total`          | array  | This array contains a detailed analysis of nutrients available in the recipe.                        |
| `coverage`       | string | A value between 0-1 to indicate the extent of analysis done while calculating the nutritional facts. |
| `health_score`   | object | The recipe's health score and analysis.                                                              |
| `glycemic_index` | object | The glycemic index is a value that indicates the recipe's impact on blood glucose levels.            |
| `glycemic_load`  | object | The glycemic load is a value that indicates the recipe's impact on blood sugar levels.               |

Each object contains additional attributes.

‌**Total**

‌This array contains information about the nutrients available in the recipe. Each nutrient carries the following information:

| Attribute | Type    | Description                                   | Example                                                                                                                                                                 |
| --------- | ------- | --------------------------------------------- | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------- |
| `code`    | enum    | The nutrient code.                            | `NUTRITION_CODE_MG`                                                                                                                                                     |
| `label`   | string  | The name of the nutrient.                     | `Magnesium`                                                                                                                                                             |
| `value`   | integer | The nutrient's value/amount.                  | `82.61800000000001`                                                                                                                                                     |
| `unit`    | enum    | The measurement unit of the nutrient's value. | <ul><li><code>NUTRITION_UNIT_G</code></li><li><code>NUTRITION_UNIT_MG</code></li><li><code>NUTRITION_UNIT_MKG</code></li><li><code>NUTRITION_UNIT_KCAL</code></li></ul> |

**‌Health Score**

‌This array contains information on the health score assigned to the recipe.

| Attribute             | Type   | Description                                                |
| --------------------- | ------ | ---------------------------------------------------------- |
| `value`               | double | ​The health score assigned to the recipe.                  |
| `nutrients_influence` | array  | The components based on which the health score is derived. |

‌**Glycemic Index**

‌This array includes information on the glycemic index score assigned to the recipe. It helps in understanding the impact of the recipe on blood sugar levels.

| Attribute | Type   | Description                |
| --------- | ------ | -------------------------- |
| `value`   | double | The ​glycemic index score. |

‌**Glycemic Load**

‌This array includes information on the glycemic load score assigned to the recipe. It helps in understanding the impact of the recipe on blood glucose levels.

| Attribute | Type   | Description               |
| --------- | ------ | ------------------------- |
| `value`   | double | ​The glycemic load score. |


